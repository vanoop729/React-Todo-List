{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","config/particle-config.js","particleBackground.js","App.js","reportWebVitals.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","handleChange","e","target","inputRef","useRef","useEffect","current","focus","className","onSubmit","preventDefault","id","Math","floor","random","text","type","maxLength","placeholder","name","onChange","ref","onClick","delAll","title","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","particlesConfig","particles","number","density","enable","value_area","color","shape","stroke","width","polygon","nb_sides","image","src","height","opacity","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","ParticleBackground","params","App","style","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAqEeA,MAjEf,SAAkBC,GAChB,MAA0BC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAAnE,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAe,SAACC,GACpBF,EAASE,EAAEC,OAAOL,QAIdM,EAAWC,iBAAO,MAexB,OAbAC,qBAAU,WACRF,EAASG,QAAQC,WAajB,sBAAMC,UAAU,YAAYC,SAVT,SAACR,GACpBA,EAAES,iBACFhB,EAAMe,SAAS,CACbE,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMjB,IAERC,EAAS,KAIT,SACGL,EAAME,KAEL,qCACE,uBACEoB,KAAK,OACLC,UAAU,KACVC,YAAY,cACZrB,MAAOC,EACPqB,KAAK,OACLX,UAAU,kBACVY,SAAUpB,EACVqB,IAAKlB,IAEP,wBAAQK,UAAU,mBAAlB,uBAGF,gCACE,uBACEQ,KAAK,OACLC,UAAU,KACVC,YAAY,aACZrB,MAAOC,EACPqB,KAAK,OACLX,UAAU,aACVY,SAAUpB,EACVqB,IAAKlB,IAEP,wBAAQK,UAAU,cAAlB,sBAEA,cAAC,IAAD,CACEc,QAAS,kBAAM5B,EAAM6B,UACrBf,UAAU,aACVgB,MAAM,qB,QCVHC,MA7Cf,YAAgE,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAC/C,EAAwBlC,mBAAS,CAC/BgB,GAAI,KACJd,MAAO,KAFT,mBAAOD,EAAP,KAAakC,EAAb,KAaA,OAAIlC,EAAKe,GACA,cAAC,EAAD,CAAUf,KAAMA,EAAMa,SATV,SAACZ,GACpBgC,EAAWjC,EAAKe,GAAId,GACpBiC,EAAQ,CACNnB,GAAI,KACJd,MAAO,QAQJ6B,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACf,sBACEzB,UAAWwB,EAAKE,WAAa,oBAAsB,WADrD,UAIE,8BAAoBF,EAAKjB,MAAfiB,EAAKrB,IACf,sBAAKH,UAAU,QAAf,UACE,cAAC,IAAD,CACEgB,MAAM,OACNF,QAAS,kBAAMK,EAAaK,EAAKrB,KACjCH,UAAU,cAEZ,cAAC,IAAD,CACEgB,MAAM,OACNF,QAAS,kBAAMQ,EAAQ,CAAEnB,GAAIqB,EAAKrB,GAAId,MAAOmC,EAAKjB,QAClDP,UAAU,cAEZ,cAAC,IAAD,CACEgB,MAAM,SACNF,QAAS,kBAAMM,EAAWI,EAAKrB,KAC/BH,UAAU,qBAjBTyB,OCkCIE,MAzDf,WACE,MAA0BxC,mBAAS,IAAnC,mBAAO+B,EAAP,KAAcU,EAAd,KA0CA,OACE,sBAAK5B,UAAU,WAAf,UACE,4DACA,cAAC,EAAD,CAAUC,SA3CE,SAACuB,GACf,GAAKA,EAAKjB,OAAQ,QAAQsB,KAAKL,EAAKjB,MAApC,CAIA,IAAMuB,EAAQ,CAAIN,GAAJ,mBAAaN,IAE3BU,EAASE,KAoCsBf,OAPlB,WACba,EAAS,OAOP,cAAC,EAAD,CACEV,MAAOA,EACPC,aApBe,SAAChB,GACpB,IAAI4B,EAAeb,EAAMK,KAAI,SAACC,GAI5B,OAHIA,EAAKrB,KAAOA,IACdqB,EAAKE,YAAcF,EAAKE,YAEnBF,KAETI,EAASG,IAcLX,WA1Ba,SAACjB,GAClB,IAAM6B,EAAY,YAAId,GAAOe,QAAO,SAACT,GAAD,OAAUA,EAAKrB,KAAOA,KAC1DyB,EAASI,IAyBLX,WArCa,SAACa,EAAQC,GACrBA,EAAS5B,OAAQ,QAAQsB,KAAKM,EAAS5B,OAI5CqB,GAAS,SAACQ,GAAD,OACPA,EAAKb,KAAI,SAACc,GAAD,OAAWA,EAAKlC,KAAO+B,EAASC,EAAWE,e,iBCsF3CC,EA9GS,CACtBC,UAAW,CACTC,OAAQ,CACNnD,MAAO,GACPoD,QAAS,CACPC,QAAQ,EACRC,WAAY,MAGhBC,MAAO,CACLvD,MAAO,WAETwD,MAAO,CACLrC,KAAM,SACNsC,OAAQ,CACNC,MAAO,EACPH,MAAO,WAETI,QAAS,CACPC,SAAU,GAEZC,MAAO,CACLC,IAAK,iBACLJ,MAAO,IACPK,OAAQ,MAGZC,QAAS,CACPhE,MAAO,kBACPiB,QAAQ,EACRgD,KAAM,CACJZ,QAAQ,EACRa,MAAO,EACPC,YAAa,GACbC,MAAM,IAGVC,KAAM,CACJrE,MAAO,EACPiB,QAAQ,EACRgD,KAAM,CACJZ,QAAQ,EACRa,MAAO,GACPI,SAAU,GACVF,MAAM,IAGVG,YAAa,CACXlB,QAAQ,EACRmB,SAAU,IACVjB,MAAO,UACPS,QAAS,GACTN,MAAO,GAETe,KAAM,CACJpB,QAAQ,EACRa,MAAO,EACPQ,UAAW,OACXzD,QAAQ,EACR0D,UAAU,EACVC,SAAU,MACVC,QAAQ,EACRC,QAAS,CACPzB,QAAQ,EACR0B,QAAS,IACTC,QAAS,QAIfC,cAAe,CACbC,UAAW,SACXC,OAAQ,CACNC,QAAS,CACP/B,QAAQ,EACRgC,KAAM,WAERC,QAAS,CACPjC,QAAQ,EACRgC,KAAM,QAERE,QAAQ,GAEVC,MAAO,CACLC,KAAM,CACJjB,SAAU,IACVD,YAAa,CACXP,QAAS,IAGb0B,OAAQ,CACNlB,SAAU,IACVH,KAAM,GACNsB,SAAU,EACV3B,QAAS,EACTE,MAAO,GAET0B,QAAS,CACPpB,SAAU,IACVmB,SAAU,IAEZE,KAAM,CACJC,aAAc,GAEhBC,OAAQ,CACND,aAAc,KAIpBE,eAAe,GCxGF,SAASC,IACtB,OAAO,cAAC,IAAD,CAAWC,OAAQjD,ICgBbkD,MAjBf,WACE,OACE,qCACE,qBAAKxF,UAAU,eAAf,SACE,oBAAIyF,MAAO,CAAE7C,MAAO,OAApB,+GAKF,sBAAK5C,UAAU,gBAAf,UACE,cAACsF,EAAD,IACA,cAAC,EAAD,WCHOI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.167718f8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { AiFillDelete } from \"react-icons/ai\";\r\n\r\nfunction TodoForm(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\r\n\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  //To focus on the input field\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 100000),\r\n      text: input,\r\n    });\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n      {props.edit ? (\r\n        //   For editing only\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            maxLength=\"35\"\r\n            placeholder=\"Update todo\"\r\n            value={input}\r\n            name=\"text\"\r\n            className=\"todo-input edit\"\r\n            onChange={handleChange}\r\n            ref={inputRef}\r\n          />\r\n          <button className=\"todo-button edit\">Update</button>\r\n        </>\r\n      ) : (\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            maxLength=\"35\"\r\n            placeholder=\"Add a todo\"\r\n            value={input}\r\n            name=\"text\"\r\n            className=\"todo-input\"\r\n            onChange={handleChange}\r\n            ref={inputRef}\r\n          />\r\n          <button className=\"todo-button\">Add Todo</button>\r\n\r\n          <AiFillDelete\r\n            onClick={() => props.delAll()}\r\n            className=\"delete-all\"\r\n            title=\"Delete All\"\r\n          />\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","import React, { useState } from \"react\";\r\nimport { RiCloseCircleLine } from \"react-icons/ri\";\r\nimport { TiEdit } from \"react-icons/ti\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport { IoCheckmarkDoneCircleOutline } from \"react-icons/io5\";\r\n\r\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: \"\",\r\n  });\r\n\r\n  const submitUpdate = (value) => {\r\n    updateTodo(edit.id, value);\r\n    setEdit({\r\n      id: null,\r\n      value: \"\",\r\n    });\r\n  };\r\n\r\n  if (edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n  }\r\n\r\n  return todos.map((todo, index) => (\r\n    <div\r\n      className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"}\r\n      key={index}\r\n    >\r\n      <div key={todo.id}>{todo.text}</div>\r\n      <div className=\"icons\">\r\n        <IoCheckmarkDoneCircleOutline\r\n          title=\"Done\"\r\n          onClick={() => completeTodo(todo.id)}\r\n          className=\"done-icon\"\r\n        />\r\n        <TiEdit\r\n          title=\"Edit\"\r\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n          className=\"edit-icon\"\r\n        />\r\n        <RiCloseCircleLine\r\n          title=\"Delete\"\r\n          onClick={() => removeTodo(todo.id)}\r\n          className=\"delete-icon\"\r\n        />\r\n      </div>\r\n    </div>\r\n  ));\r\n}\r\n\r\nexport default Todo;\r\n","import React, { useState } from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport TodoForm from \"./TodoForm\";\r\n\r\nfunction TodoList() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const addTodo = (todo) => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n\r\n    const newTodos = [todo, ...todos];\r\n\r\n    setTodos(newTodos);\r\n    // console.log(newTodos);\r\n  };\r\n\r\n  const updateTodo = (todoId, newValue) => {\r\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n      return;\r\n    }\r\n\r\n    setTodos((prev) =>\r\n      prev.map((item) => (item.id === todoId ? newValue : item))\r\n    );\r\n  };\r\n\r\n  const removeTodo = (id) => {\r\n    const removeArr = [...todos].filter((todo) => todo.id !== id);\r\n    setTodos(removeArr);\r\n  };\r\n\r\n  const completeTodo = (id) => {\r\n    let updatedTodos = todos.map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  const delAll = () => {\r\n    setTodos([]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-app\">\r\n      <h1>What's the plan for today?</h1>\r\n      <TodoForm onSubmit={addTodo} delAll={delAll} />\r\n      <Todo\r\n        todos={todos}\r\n        completeTodo={completeTodo}\r\n        removeTodo={removeTodo}\r\n        updateTodo={updateTodo}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","const particlesConfig = {\r\n  particles: {\r\n    number: {\r\n      value: 80,\r\n      density: {\r\n        enable: true,\r\n        value_area: 800,\r\n      },\r\n    },\r\n    color: {\r\n      value: \"#ffffff\",\r\n    },\r\n    shape: {\r\n      type: \"circle\",\r\n      stroke: {\r\n        width: 0,\r\n        color: \"#000000\",\r\n      },\r\n      polygon: {\r\n        nb_sides: 5,\r\n      },\r\n      image: {\r\n        src: \"img/github.svg\",\r\n        width: 100,\r\n        height: 100,\r\n      },\r\n    },\r\n    opacity: {\r\n      value: 0.5839969063947663,\r\n      random: false,\r\n      anim: {\r\n        enable: false,\r\n        speed: 1,\r\n        opacity_min: 0.1,\r\n        sync: false,\r\n      },\r\n    },\r\n    size: {\r\n      value: 3,\r\n      random: true,\r\n      anim: {\r\n        enable: false,\r\n        speed: 40,\r\n        size_min: 0.1,\r\n        sync: false,\r\n      },\r\n    },\r\n    line_linked: {\r\n      enable: true,\r\n      distance: 150,\r\n      color: \"#ffffff\",\r\n      opacity: 0.4,\r\n      width: 1,\r\n    },\r\n    move: {\r\n      enable: true,\r\n      speed: 1,\r\n      direction: \"none\",\r\n      random: false,\r\n      straight: false,\r\n      out_mode: \"out\",\r\n      bounce: false,\r\n      attract: {\r\n        enable: false,\r\n        rotateX: 600,\r\n        rotateY: 1200,\r\n      },\r\n    },\r\n  },\r\n  interactivity: {\r\n    detect_on: \"canvas\",\r\n    events: {\r\n      onhover: {\r\n        enable: false,\r\n        mode: \"repulse\",\r\n      },\r\n      onclick: {\r\n        enable: false,\r\n        mode: \"push\",\r\n      },\r\n      resize: true,\r\n    },\r\n    modes: {\r\n      grab: {\r\n        distance: 400,\r\n        line_linked: {\r\n          opacity: 1,\r\n        },\r\n      },\r\n      bubble: {\r\n        distance: 400,\r\n        size: 40,\r\n        duration: 2,\r\n        opacity: 8,\r\n        speed: 3,\r\n      },\r\n      repulse: {\r\n        distance: 200,\r\n        duration: 0.4,\r\n      },\r\n      push: {\r\n        particles_nb: 4,\r\n      },\r\n      remove: {\r\n        particles_nb: 2,\r\n      },\r\n    },\r\n  },\r\n  retina_detect: true,\r\n};\r\nexport default particlesConfig;\r\n","import React from \"react\";\r\nimport Particles from \"react-particles-js\";\r\nimport particlesConfig from \"./config/particle-config\";\r\n\r\nexport default function ParticleBackground() {\r\n  return <Particles params={particlesConfig} />;\r\n}\r\n","import \"./App.css\";\nimport TodoList from \"./components/TodoList\";\nimport ParticleBackground from \"./particleBackground\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"mobile-users\">\n        <h2 style={{ color: \"red\" }}>\n          Please visit this site on a desktop OR turn on \"Desktop Mode\" in your\n          browser and then refresh!\n        </h2>\n      </div>\n      <div className=\"desktop-users\">\n        <ParticleBackground />\n        <TodoList />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}